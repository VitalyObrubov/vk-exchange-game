"""next migration

Revision ID: 37b1e23fb251
Revises: 
Create Date: 2022-03-02 16:29:46.579978

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer, Date, Unicode

# revision identifiers, used by Alembic.
revision = '37b1e23fb251'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=False),
    sa.Column('diff', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('securites',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=False),
    sa.Column('start_price', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('vk_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('vk_id')
    )
    op.create_table('game_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.vk_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number_in_game', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=30), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buyed_securites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_in_game_id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.String(length=10), nullable=False),
    sa.Column('ammount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['security_id'], ['securites.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_in_game_id'], ['game_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_jornal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sequrity_id', sa.String(length=10), nullable=False),
    sa.Column('operation', sa.String(length=30), nullable=False),
    sa.Column('ammount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['round_id'], ['trade_rounds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sequrity_id'], ['securites.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.vk_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('traded_securites',
    sa.Column('sequrity_id', sa.String(length=10), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('market_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['market_event_id'], ['market_events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['round_id'], ['trade_rounds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sequrity_id'], ['securites.id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###
    accounts_table = table('market_events',
        column('id', Integer),
        column('description', Unicode),
        column('diff', Integer)
    )   
    op.bulk_insert(accounts_table,
        [
            {'id':1, 'description':'Нейтральное событие','diff':0},
            {'id':2, 'description':'Хорошее событие','diff':10},                    
            {'id':3, 'description':'Плохое событие','diff':-10},           
        ]
    )
    accounts_table = table('securites',
        column('id', String),
        column('description', Unicode),
        column('start_price', Integer)
    ) 
    op.bulk_insert(accounts_table,
        [
            {'id':'ABRD', 'description':'Абрау – Дюрсо','start_price':100},
            {'id':'ACKO', 'description':'АСКО-СТРАХОВАНИЕ','start_price':200},                    
            {'id':'AFLT', 'description':'Аэрофлот','start_price':200},
            {'id':'AKRN', 'description':'Акрон','start_price':500},
            {'id':'AMEZ', 'description':'Ашинский металлургический завод','start_price':1000},
        ]
    )



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('traded_securites')
    op.drop_table('trade_jornal')
    op.drop_table('buyed_securites')
    op.drop_table('trade_rounds')
    op.drop_table('game_users')
    op.drop_table('users')
    op.drop_table('securites')
    op.drop_table('market_events')
    op.drop_table('games')
    # ### end Alembic commands ###
